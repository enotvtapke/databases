Значения сущностей и атрибутов в большинстве случаев очевидно из их названий. Поясню лишь те ситуации, когда это не совсем так.

Сущность 'Lessons' задаёт занятие, которое есть в расписании у группы. Эта сущность связывает 'Groups' и 'Subjects', неся дополнительную нагрузку в виде времени и места проведения занятия, преподавателя. По смысловой нагрузке эту сущность можно рассматривать как ассоциацию, однако в ERM было принято решение сделать 'Lessons' сущностью для простоты понимания диаграммы. В данном случае, на мой взгляд, абстракция в виде ассоциации не способствует более ясному восприятию логической модели.

Слабая сущность 'Score' задаёт оценку студента по предмету из 'Subjects'. Эту сущность опять же можно было сделать ассоциацией, она не сделана ассоциацией по той же причине, по которой 'Lessons' не ассоциация. Следует заметить, что у студента могут быть оценки по предметам, которые не преподают в его группе. Такая ситуация означает, что студент получил оценку за предмет, учась на другом курсе, так как при переходе с одного курса на другой группа студента меняется.

====

В каждой группе может учиться множество студентов, у группы может быть множество занятий в расписании. У каждого занятия есть единственный преподаватель и единственный предмет занятия. У студента может быть множество оценок, каждая из которых соответствует одному предмету.

==

Чтобы выразить отношение 'Lessons' с предметами, группами и преподавателями, в таблицу 'Lessons' добавлены 3 столбца, ссылающиеся на основные ключи таблиц 'Subjects', 'Groups' и 'Teachers'.

Слабая сущность 'Scores' преобразована в таблицу 'Scores', куда были добавлены столбцы, которые ссылаются на предмет оценки и студента, который эту оценку получил. Эти стоблцы уникально идентифицируют оценку, они являются составным основным ключом таблицы 'Scores'.

id -> bigserial
person_name -> varchar(64)
subject_name -> varchar(128)
points -> numeric(5, 2)
group_code -> char(6)
time -> time(0)
number -> integer
lesson_type -> varchar(32)
